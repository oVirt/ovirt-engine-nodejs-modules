name: comment '/build rpm' to build a PR (the copr way)
on:
  issue_comment:
    types: [created]

jobs:
  build:
    if: |
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/build rpm') &&
      (
        github.event.comment.author_association == 'MEMBER' ||
        github.event.comment.author_association == 'COLLABORATOR' ||
        github.event.comment.author_association == 'OWNER'
      )

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: el9
            container-image: el9stream
          - name: el10
            container-image: el10stream

    name: ${{ matrix.name }}, build the rpm repo
    container:
      image: quay.io/ovirt/buildcontainer:${{ matrix.container-image }}

    env:
      CHECK_VERSION: no
      PR_NUMBER: ${{ github.event.issue.number }}

    steps:
      - name: checkout the repo
        uses: ovirt/checkout-action@main

      - name: checkout the PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          gh pr checkout --repo ${GITHUB_REPOSITORY} ${PR_NUMBER}

      - name: install build.sh required packages and most current nodejs-modules (as a fetch cache)
        run: |
          dnf -y install ovirt-engine-nodejs-modules
          dnf -y builddep --spec ovirt-engine-nodejs-modules.spec

      - name: build src.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./automation/build.sh copr

      - name: install build dependencies from src.rpm
        run: |
          dnf -y builddep exported-artifacts/ovirt-engine-nodejs-modules*.src.rpm

      - name: Build rpm directly from src.rpm
        run: |
          rpmbuild \
            --define="_rpmdir `pwd`/exported-artifacts" \
            --rebuild exported-artifacts/ovirt-engine-nodejs-modules*.src.rpm

      - name: upload artifacts
        uses: ovirt/upload-rpms-action@main
        with:
          directory: exported-artifacts/

      - name: add success comment with a link to the action's run
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LINK=$( \
            gh api -X GET \
              repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} \
              -q '"[action run summary]("+ .html_url +")"' \
          )
          echo ":heavy_check_mark: Build ${{ matrix.name }} success! See the results and artifacts at $LINK." \
            | gh pr comment --repo ${GITHUB_REPOSITORY} -F - ${PR_NUMBER}

      - name: add fail comment with a link to the action's run
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LINK=$( \
            gh api -X GET \
              repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} \
              -q '"[action run summary]("+ .html_url +")"' \
          )
          echo ":x: Build ${{ matrix.name }} failed. See the results at $LINK." \
            | gh pr comment --repo ${GITHUB_REPOSITORY} -F - ${PR_NUMBER}
